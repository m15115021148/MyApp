//ndk 

#NDK_HOME为安装路径
export NDK_HOME=/workspace/android-ndk-r10e
$NDK_HOME/build/tools/make-standalone-toolchain.sh --arch=arm --platform=android-21 --install-dir=$HOME/android-toolchain --toolchain=arm-linux-androideabi-4.9



sudo apt-get remove cmake //卸载
echo $PATH


配置环境

sudo gedit ~/.bashrc

export ANDROID_NDK=/home/cmm/Documents/NDK/android-ndk-r13b
export PATH=$ANDROID_NDK:$PATH

export JAVA_HOME=/home/cmm/Documents/jdk/jdk1.8.0_77
export JRE_HOME=${JAVA_HOME}/jre  
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  
export PATH=${JAVA_HOME}/bin:$PATH

export SWIG_HOME=/home/cmm/Documents/swig/swig-3.0.12
export PATH=$SWIG_HOME:$PATH

export ANDROID_SDK_ROOT=/home/cmm/Documents/sdk/android-sdk-linux
export PATH=$ANDROID_SDK_ROOT/tools:$PATH

source ~/.bashrc



pjsip 编译：

pjproject-2.6/pjlib/include/pj/config_site.h
config_site.h内容如下：

/* Activate Android specific settings in the 'config_site_sample.h' */  
#define PJ_CONFIG_ANDROID 1  
//To enable video  
#define PJMEDIA_HAS_VIDEO 1  
//To enable libyuv  
#define PJMEDIA_HAS_LIBYUV  1  
//To enable TCP transport  
#define PJ_HAS_TCP 1  
#include <pj/config_site_sample.h> 


export ANDROID_NDK_ROOT=/home/cmm/Documents/NDK/android-ndk-r13b

NDK_TOOLCHAIN_VERSION=4.9 TARGET_ABI=armeabi-v7a APP_PLATFORM=android-19 ./configure-android --use-ndk-cflags

make dep && make clean && make

cd pjsip-apps/src/swig

make

openh264 编译:

===================================================================================================================================

git 的使用

git pull
git add .
git commit -m "test"
git commit -amend
git push

gitdir=$(git rev-parse --git-dir); scp -p -P 29418 chenmengmeng@192.168.0.240:hooks/commit-msg ${gitdir}/hooks/

git reset --hard HEAD~ 

git branch -d master 删除master

git checkout master.c3 切换分支到master.c3

git status 

//-----------
git init
git remote add origin https://github.com/m15115021148/testGit
uname m...
psw ..
git push --set-upstream origin master

vim 运用

:wq 保存退出
p 复制  
d 删除


=========================================================================================================================================

.h folder

D:\sip\SipCaller2\app\src\main>javah -d jni -classpath ../../build/intermediates/classes/debug com.meigsmart.sipcaller2.MainActivity

D:\sip\SipCaller2\app\build\intermediates\classes\debug>javah -jni com.meigsmart.sipcaller2.MainActivity

\sip\SipCaller2\app\src\main\java>javah -jni com.meigsmart.sipcaller2.MainActivity

=========================================================================================================================================

cmake

export ANDROID_NDK=/home/cmm/Documents/NDK/android-ndk-r13b
export ANDROID_SDK_ROOT=/home/cmm/Documents/sdk/android-sdk-linux
export JAVA_HOME=/home/cmm/Documents/jdk/jdk1.8.0_77



=========================================================================================================================================
180编译

全编
cd oe-core
oe-core$ source build/conf/set_bb_env.sh
build$ build_slt180

cubic部分编译
build$ bitbake -c cleanall cubic && build_slt180


全编译；
build$ rm -rf bitbake.lock && rm -rf  sstate-cache && rm -rf tmp-glibc

//android linux
source //envsetup.sh
lunch
22

// copy
cp -r /home/chenmengmeng/Program/mdm9607_1-0_slt180/apps_proc/cubic/* /home/chenmengmeng/Program/meiglink/sip 



获取日志log
adb shell
cubic-read-log >log.log
exit
adb pull /log.log D:\Log


//push
adb root
adb remount
adb push xx.apk system/app
adb pull /storage/emulated/0/MeigsmartLog/appLog.log D:\Log
adb disable-verity

adb shell 查看序列号 cubic_configs.h
cmmd getcfg ro.core.serial_num

cmmd v_test_dial sip:044762846272@116.62.205.204:6080

=============================================================================================================================================
获取手机log 通过cmd
adb logcat -c
adb logcat -v time > D:\Log\log20171129.txt

C:\Users\IP81-RJ>adb wait-for-device && adb shell cubic-read-log > 00.log

C:\Users\IP81-RJ>adb wait-for-device && echo "gogogo" && adb shell cubic-read-lo
g > 00.log
"gogogo"

ndk
export PATH=$PATH:/home/chenmengmeng/Program/ndk/android-ndk-r13b:/home/chenmengmeng/Program/ndk/android-ndk-r13b/build/tools/

openssl 
./config no-asm shared --prefix=/home/chenmengmeng/Program/openssl --openssldir=/home/chenmengmeng/Program/openssl
make clean && make 
make install


//-----------------openssl android ------------------------------
tar xzvf ~/Downloads/openssl-1.0.1g.tar.gz
cd openssl-1.0.1g
export NDK=~/android-ndk-r9d
$NDK/build/tools/make-standalone-toolchain.sh --platform=android-9 --toolchain=arm-linux-androideabi-4.6 --install-dir=`pwd`/android-toolchain-arm
export TOOLCHAIN_PATH=`pwd`/android-toolchain-arm/bin
export TOOL=arm-linux-androideabi
export NDK_TOOLCHAIN_BASENAME=${TOOLCHAIN_PATH}/${TOOL}
export CC=$NDK_TOOLCHAIN_BASENAME-gcc
export CXX=$NDK_TOOLCHAIN_BASENAME-g++
export LINK=${CXX}
export LD=$NDK_TOOLCHAIN_BASENAME-ld
export AR=$NDK_TOOLCHAIN_BASENAME-ar
export RANLIB=$NDK_TOOLCHAIN_BASENAME-ranlib
export STRIP=$NDK_TOOLCHAIN_BASENAME-strip
export ARCH_FLAGS="-mthumb"
export ARCH_LINK=
export CPPFLAGS=" ${ARCH_FLAGS} -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64 "
export CXXFLAGS=" ${ARCH_FLAGS} -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64 -frtti -fexceptions "
export CFLAGS=" ${ARCH_FLAGS} -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64 "
export LDFLAGS=" ${ARCH_LINK} "
./Configure android shared --prefix=/home/chenmengmeng/Program/openssl
make clean
PATH=$TOOLCHAIN_PATH:$PATH make
make install


//------------pjsip  to  openssl---------------------------------

NDK_TOOLCHAIN_VERSION=4.9 TARGET_ABI=armeabi APP_PLATFORM=android-19 ./configure-android --use-ndk-cflags --prefix=
make dep && make 
make install


//----------------------curl-----------------------------------------

CPPFLAGS="-I/home/chenmengmeng/Program/openssls -I/home/chenmengmeng/Program/openssls/include" LDFLAGS="-L/home/chenmengmeng/Program/openssls/lib" LIBS="-ldl" ./configure --with-ssl=/home/chenmengmeng/Program/openssls --enable-static --disable-dict --disable-ftp --disable-imap --disable-ldap --disable-ldaps --disable-pop3 --disable-proxy --disable-rtsp --disable-smtp --disable-telnet --disable-tftp --disable-zlib --without-ca-bundle --without-gnutls --without-libidn --without-librtmp --without-libssh2 --without-nss --without-zlib




//-------------------------Android系统属性SystemProperties在应用层的用法------
http://blog.csdn.net/lilidejing/article/details/53288243


//-------------------------android adb shell --------------------------------------
adb shell monkey -p com.meigsmart.test741 --throttle 500 --ignore-crashes --ignore-timeouts -s 20 -v -v -v 1000

top -m 10 -s cpu


//------------------------linux 命令-------------------------------------

adb reboot edl  烧程序

find -iname "StorageNotification.java"

grep -rns "android_start_title" ./

mmm frameworks/base/ -B 2>&1|tee 1.log

scp -r  /home/chenmengmeng/Program/cur 192.168.0.173:/home/chenmengmeng/Program/